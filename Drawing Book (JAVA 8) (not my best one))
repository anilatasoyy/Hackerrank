import java.io.*;
import java.math.*;
import java.text.*;
import java.util.*;
import java.util.regex.*;

public class Solution {

    /*
     * Complete the pageCount function below.
     */
    static int pageCount(int n, int p) {
        //THIS WAS ANNOYING AND MY RESULT IS WEIRD
        /*
         * Write your code here.
         */
         double ne = n;
         double pe = p ; 

         //MOST UNIQUE CASE OF ASKING THIS QUESTION FOR A 2 PAGE BOOK

         if(n==2 && p==1){
             return 0;
         }
         //THIS IS FOR IF IT ASKS ONE OF THE NUMBERS FROM LAST PART AND PAGE NUMBER IS ODD
        
         if (n%2 == 1 && n-p==1){
             return 0;
         }
         //SAME THING FOR EVEN AND NORMALLY PAGE 2
         else if(n-p == 1){

             return 1;
         }

        
        //IF STARTING FROM THE LAST PART
        else if(ne-pe<ne/2){


             return (n-p)/2;
         }
         //IF STARTING FROM THE FIRST PART
        
         else {
             return p/2;


         }
         
         
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])*");

        int p = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])*");

        int result = pageCount(n, p);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
